import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Anchor from '@/components/Anchor';
import styles from '@/styles/Daerogi.module.sass';
import { componentMap } from './toolboxes/[toolboxId]';

export interface LawarItem {
  id: number;
  documentId: string;
  subject: string;
  summary?: any;
  matchingTime?: any;
  createdAt: string;
}

export default function DaerogiItems() {
  const [matching, setMatching] = useState<LawarItem[] | null>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const router = useRouter();

  useEffect(() => {
    const authInLocalStorage = localStorage.getItem('auth');
    const authInCookies = document.cookie.includes('auth=');

    if (authInLocalStorage && !authInCookies) {
      document.cookie = `auth=${authInLocalStorage}; path=/;`;
    } else if (!authInLocalStorage && !authInCookies) {
      router.push('/daerogi/login');
    }
  }, [router]);

  const fetchData = async () => {
    try {
      const response = await fetch(`/api/matching`);
      const result = await response.json();
      console.log('result.data: ', result.data);

      const formattedData: LawarItem[] = result.data.map((item: any) => ({
        id: item.id,
        documentId: item.documentId,
        subject: item.subject,
        summary: item.summary,
        matchingTime: item.matchingTime,
        createdAt: item.createdAt,
      }));

      setMatching(formattedData);
    } catch (error) {
      setError('Failed to load data');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  return (
    <main className={styles.list}>
      <div className={styles.noti}>
        <Anchor href="/daerogi/notifications">
          <span>.</span>
        </Anchor>
      </div>
      {loading && <p>데이터를 불러오는 중입니다 :)</p>}
      {error && <p>일시적인 오류입니다. 지속적으로 문제 발생시 아리를 호출하세요.</p>}
      <ul className={styles.toolbox}>
        {Object.keys(componentMap).map((toolboxId, index) => {
          const { title } = componentMap[toolboxId];
          const { name } = componentMap[toolboxId];
          return (
            <li
              key={toolboxId}
              className={router.asPath === `/daerogi/toolboxes/${toolboxId}` ? styles.current : undefined}
            >
              <Anchor href={`/daerogi/toolboxes/${toolboxId}`}>
                {name === 'alarm' && (
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M6.29688 1.50195L1.69922 5.36719L2.98633 6.89648L7.58398 3.0332L6.29688 1.50195ZM17.7031 1.50195L16.416 3.0332L21.0137 6.89648L22.3008 5.36719L17.7031 1.50195ZM12 4C7.029 4 3 8.029 3 13C3 17.971 7.029 22 12 22C16.971 22 21 17.971 21 13C21 8.029 16.971 4 12 4ZM11 8H13V13.3828L16.4473 15.1055L15.5527 16.8945L11 14.6172V8Z"
                      fill="#E50032"
                    />
                  </svg>
                )}
                {name === 'unit' && (
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M18 2H6C4.895 2 4 2.895 4 4V20C4 21.105 4.895 22 6 22H18C19.105 22 20 21.105 20 20V4C20 2.895 19.105 2 18 2ZM17 8H7C6.448 8 6 7.552 6 7V5C6 4.448 6.448 4 7 4H17C17.552 4 18 4.448 18 5V7C18 7.552 17.552 8 17 8ZM16 20H12C11.448 20 11 19.552 11 19C11 18.448 11.448 18 12 18H16C16.552 18 17 18.448 17 19C17 19.552 16.552 20 16 20ZM9 19C9 19.552 8.552 20 8 20C7.448 20 7 19.552 7 19C7 18.448 7.448 18 8 18C8.552 18 9 18.448 9 19ZM9 15C9 15.552 8.552 16 8 16C7.448 16 7 15.552 7 15C7 14.448 7.448 14 8 14C8.552 14 9 14.448 9 15ZM9 11C9 11.552 8.552 12 8 12C7.448 12 7 11.552 7 11C7 10.448 7.448 10 8 10C8.552 10 9 10.448 9 11ZM13 15C13 15.552 12.552 16 12 16C11.448 16 11 15.552 11 15C11 14.448 11.448 14 12 14C12.552 14 13 14.448 13 15ZM13 11C13 11.552 12.552 12 12 12C11.448 12 11 11.552 11 11C11 10.448 11.448 10 12 10C12.552 10 13 10.448 13 11ZM17 15C17 15.552 16.552 16 16 16C15.448 16 15 15.552 15 15C15 14.448 15.448 14 16 14C16.552 14 17 14.448 17 15ZM17 11C17 11.552 16.552 12 16 12C15.448 12 15 11.552 15 11C15 10.448 15.448 10 16 10C16.552 10 17 10.448 17 11Z"
                      fill="#94E138"
                    />
                  </svg>
                )}
                {name === 'alliance' && (
                  <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M3 12.453C3 7.48244 7.02944 3.453 12 3.453V3.453C16.9706 3.453 21 7.48244 21 12.453V12.453C21 17.4236 16.9706 21.453 12 21.453V21.453C7.02944 21.453 3 17.4236 3 12.453V12.453Z"
                      fill="#BF6C22"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M4 12.453C4 16.8713 7.58172 20.453 12 20.453C16.4183 20.453 20 16.8713 20 12.453C20 8.03473 16.4183 4.453 12 4.453C7.58172 4.453 4 8.03473 4 12.453ZM12 3.453C7.02944 3.453 3 7.48244 3 12.453C3 17.4236 7.02944 21.453 12 21.453C16.9706 21.453 21 17.4236 21 12.453C21 7.48244 16.9706 3.453 12 3.453Z"
                      fill="#FFF2C9"
                    />
                    <path
                      d="M16.432 9.12222C16.2857 9.12568 16.1466 9.18684 16.0452 9.29236L11.9988 13.3387L7.95244 9.29236C7.90074 9.23921 7.8389 9.19696 7.7706 9.16811C7.70229 9.13926 7.62889 9.1244 7.55474 9.12439C7.44437 9.12442 7.33651 9.15737 7.24496 9.21902C7.1534 9.28066 7.08232 9.36822 7.04078 9.47048C6.99925 9.57274 6.98916 9.68507 7.0118 9.79309C7.03444 9.90112 7.08878 9.99994 7.16788 10.0769L11.6065 14.5156C11.7106 14.6196 11.8517 14.678 11.9988 14.678C12.1459 14.678 12.287 14.6196 12.3911 14.5156L16.8297 10.0769C16.9103 9.99944 16.9656 9.89943 16.9884 9.78998C17.0111 9.68054 17.0003 9.56677 16.9573 9.46358C16.9143 9.36039 16.8412 9.27259 16.7475 9.21168C16.6537 9.15077 16.5438 9.11959 16.432 9.12222ZM16.432 12.4512C16.2857 12.4547 16.1466 12.5158 16.0452 12.6213L11.9988 16.6677L7.95244 12.6213C7.90074 12.5682 7.8389 12.5259 7.7706 12.4971C7.70229 12.4682 7.62889 12.4534 7.55474 12.4534C7.44437 12.4534 7.33651 12.4863 7.24496 12.548C7.1534 12.6096 7.08232 12.6972 7.04078 12.7995C6.99925 12.9017 6.98916 13.014 7.0118 13.1221C7.03444 13.2301 7.08878 13.3289 7.16788 13.4059L11.6065 17.8445C11.7106 17.9486 11.8517 18.007 11.9988 18.007C12.1459 18.007 12.287 17.9486 12.3911 17.8445L16.8297 13.4059C16.9103 13.3284 16.9656 13.2284 16.9884 13.119C17.0111 13.0095 17.0003 12.8958 16.9573 12.7926C16.9143 12.6894 16.8412 12.6016 16.7475 12.5407C16.6537 12.4797 16.5438 12.4486 16.432 12.4512Z"
                      fill="#FFF2C9"
                    />
                  </svg>
                )}
                {name === 'arms' && (
                  <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M10.3596 2.08334C10.114 2.09251 9.86359 2.1405 9.61906 2.22983C8.64093 2.58504 8.03226 3.48919 8.0708 4.53085C8.07497 4.64231 8.02002 4.711 7.97314 4.75058C7.92627 4.79016 7.84746 4.83046 7.74121 4.80755C6.72454 4.58671 5.72502 5.03054 5.20418 5.93263C4.68231 6.83471 4.79819 7.9185 5.49715 8.69142C5.57528 8.77787 5.57262 8.87439 5.56429 8.92335C5.55283 8.98377 5.51979 9.06454 5.42188 9.11663C4.50104 9.60413 4.02196 10.5829 4.20321 11.6089C4.38446 12.6349 5.1688 13.3908 6.20109 13.5335C6.30942 13.5481 6.37026 13.6137 6.40047 13.6658C6.43068 13.7179 6.45638 13.8027 6.41471 13.9059C6.09437 14.6948 6.21956 15.5424 6.70972 16.1926L4.01807 20.8333H7.6639V20.8354L9.21623 24.2391L12.4836 18.7927L15.7511 24.2391L17.3034 20.8333H20.9492L18.2738 16.2211C18.7816 15.5675 18.9128 14.7075 18.5872 13.9059C18.5465 13.8038 18.5743 13.7189 18.6034 13.6658C18.6336 13.6137 18.6945 13.5481 18.8028 13.5335C19.8351 13.3908 20.6194 12.6349 20.8007 11.6089C20.9819 10.5829 20.5029 9.60413 19.582 9.11663C19.4841 9.06454 19.4511 8.98377 19.4396 8.92335C19.4313 8.87439 19.4286 8.77787 19.5068 8.69142C20.2057 7.9185 20.3216 6.83575 19.7997 5.93263C19.2789 5.0295 18.2794 4.58775 17.2627 4.80755C17.1544 4.83046 17.0776 4.79016 17.0308 4.75058C16.9839 4.711 16.9289 4.64127 16.9331 4.53085C16.9716 3.49023 16.363 2.58608 15.3848 2.22983C14.4046 1.87358 13.3593 2.17392 12.7176 2.99684C12.5812 3.17079 12.4228 3.17184 12.2863 2.99684C11.8043 2.37965 11.0965 2.05585 10.3596 2.08334ZM10.5 4.17481C10.5518 4.18927 10.5992 4.2219 10.6404 4.27451C11.5373 5.43076 13.4605 5.42971 14.3595 4.27451C14.4407 4.17034 14.5468 4.1402 14.6687 4.18499C14.7927 4.22978 14.8539 4.32026 14.8498 4.45151C14.8227 5.18276 15.1286 5.87276 15.69 6.3436C16.2504 6.81443 16.9804 6.99622 17.6981 6.84205C17.8304 6.81393 17.9264 6.85872 17.9931 6.97226C18.0597 7.08684 18.047 7.19579 17.9585 7.29371C17.4668 7.83746 17.2577 8.56158 17.3848 9.28346C17.5129 10.0043 17.9566 10.6162 18.6034 10.9579C18.7211 11.0193 18.7688 11.1165 18.7458 11.2468C18.7229 11.377 18.6441 11.4508 18.5139 11.4685C17.7879 11.5696 17.1614 11.9918 16.7948 12.6262C16.4291 13.2595 16.3783 14.0121 16.6544 14.6891C16.7044 14.811 16.6781 14.917 16.5771 15.0025C16.475 15.0868 16.365 15.0946 16.2556 15.0248C15.6337 14.6352 14.8842 14.5541 14.1967 14.8051C13.5092 15.0561 12.9843 15.5985 12.7583 16.2964C12.6791 16.5485 12.3208 16.5485 12.2395 16.2964C12.0145 15.5995 11.4906 15.0571 10.8031 14.8071C10.5386 14.7103 10.2673 14.6627 9.99544 14.6627C9.56003 14.6627 9.12751 14.7852 8.74626 15.0269C8.63376 15.0977 8.52793 15.0899 8.4248 15.0045C8.3248 14.9191 8.2965 14.814 8.34546 14.6932C8.6215 14.0151 8.5707 13.2605 8.20508 12.6262C7.83945 11.9907 7.21196 11.5716 6.48592 11.4706C6.35571 11.4528 6.2779 11.377 6.25602 11.2468C6.23311 11.1176 6.27974 11.0204 6.3964 10.9579C7.04328 10.6162 7.48695 10.0063 7.61507 9.28549C7.74215 8.56362 7.53504 7.83845 7.04338 7.29575C6.95483 7.19679 6.94316 7.08888 7.00879 6.97429C7.07441 6.86075 7.16842 6.81492 7.30176 6.84409C8.01947 7.00034 8.7494 6.81751 9.30981 6.34563C9.87231 5.87584 10.1771 5.18583 10.1501 4.45354C10.1459 4.32125 10.2072 4.23082 10.3311 4.18499C10.3921 4.16311 10.4482 4.16036 10.5 4.17481ZM9.98527 16.746C10.026 16.7445 10.0624 16.7539 10.0911 16.7643C10.1484 16.7852 10.2246 16.8321 10.2579 16.9373C10.3547 17.2376 10.5067 17.5007 10.6953 17.7287L9.43595 19.8263C9.06772 19.1861 8.41334 18.75 7.6639 18.75H7.63542L8.56112 17.1509C9.00287 17.1573 9.4492 17.0426 9.85303 16.7887C9.8999 16.7596 9.94451 16.7476 9.98527 16.746ZM15.0166 16.746C15.0574 16.7476 15.105 16.7585 15.1529 16.7887C15.5442 17.0346 15.9746 17.1502 16.4041 17.1509L17.3319 18.75H17.3034C16.5548 18.75 15.8997 19.1848 15.5313 19.8263L14.2862 17.7511C14.4845 17.5182 14.6446 17.2476 14.746 16.9373C14.7804 16.8321 14.8556 16.7852 14.9128 16.7643C14.9404 16.7539 14.9758 16.7445 15.0166 16.746Z"
                      fill="#4D335D"
                    />
                    <path
                      d="M10.5 4.17481C10.5518 4.18927 10.5992 4.2219 10.6404 4.27451C11.5373 5.43076 13.4605 5.42971 14.3595 4.27451C14.4407 4.17034 14.5468 4.1402 14.6687 4.18499C14.7927 4.22978 14.8539 4.32026 14.8498 4.45151C14.8227 5.18276 15.1286 5.87276 15.69 6.3436C16.2504 6.81443 16.9804 6.99622 17.6981 6.84205C17.8304 6.81393 17.9264 6.85872 17.9931 6.97226C18.0597 7.08684 18.047 7.19579 17.9585 7.29371C17.4668 7.83746 17.2577 8.56158 17.3848 9.28346C17.5129 10.0043 17.9566 10.6162 18.6034 10.9579C18.7211 11.0193 18.7688 11.1165 18.7458 11.2468C18.7229 11.377 18.6441 11.4508 18.5139 11.4685C17.7879 11.5696 17.1614 11.9918 16.7948 12.6262C16.4291 13.2595 16.3783 14.0121 16.6544 14.6891C16.7044 14.811 16.6781 14.917 16.5771 15.0025C16.475 15.0868 16.365 15.0946 16.2556 15.0248C15.6337 14.6352 14.8842 14.5541 14.1967 14.8051C13.5092 15.0561 12.9843 15.5985 12.7583 16.2964C12.6791 16.5485 12.3208 16.5485 12.2395 16.2964C12.0145 15.5995 11.4906 15.0571 10.8031 14.8071C10.5386 14.7103 10.2673 14.6627 9.99544 14.6627C9.56003 14.6627 9.12751 14.7852 8.74626 15.0269C8.63376 15.0977 8.52793 15.0899 8.4248 15.0045C8.3248 14.9191 8.2965 14.814 8.34546 14.6932C8.6215 14.0151 8.5707 13.2605 8.20508 12.6262C7.83945 11.9907 7.21196 11.5716 6.48592 11.4706C6.35571 11.4528 6.2779 11.377 6.25602 11.2468C6.23311 11.1176 6.27974 11.0204 6.3964 10.9579C7.04328 10.6162 7.48695 10.0063 7.61507 9.28549C7.74215 8.56362 7.53504 7.83845 7.04338 7.29575C6.95483 7.19679 6.94316 7.08888 7.00879 6.97429C7.07441 6.86075 7.16842 6.81492 7.30176 6.84409C8.01947 7.00034 8.7494 6.81751 9.30981 6.34563C9.87231 5.87584 10.1771 5.18583 10.1501 4.45354C10.1459 4.32125 10.2072 4.23082 10.3311 4.18499C10.3921 4.16311 10.4482 4.16036 10.5 4.17481Z"
                      fill="#FCC947"
                    />
                    <path
                      d="M9.98527 16.746C10.026 16.7445 10.0624 16.7539 10.0911 16.7643C10.1484 16.7852 10.2246 16.8321 10.2579 16.9373C10.3547 17.2376 10.5067 17.5007 10.6953 17.7287L9.43595 19.8263C9.06772 19.1861 8.41334 18.75 7.6639 18.75H7.63542L8.56112 17.1509C9.00287 17.1573 9.4492 17.0426 9.85303 16.7887C9.8999 16.7596 9.94451 16.7476 9.98527 16.746Z"
                      fill="#FCC947"
                    />
                    <path
                      d="M15.0166 16.746C15.0574 16.7476 15.105 16.7585 15.1529 16.7887C15.5442 17.0346 15.9746 17.1502 16.4041 17.1509L17.3319 18.75H17.3034C16.5548 18.75 15.8997 19.1848 15.5313 19.8263L14.2862 17.7511C14.4845 17.5182 14.6446 17.2476 14.746 16.9373C14.7804 16.8321 14.8556 16.7852 14.9128 16.7643C14.9404 16.7539 14.9758 16.7445 15.0166 16.746Z"
                      fill="#FCC947"
                    />
                  </svg>
                )}
                <span>{title}</span>
              </Anchor>
            </li>
          );
        })}
      </ul>

      {!loading && !error && matching && (
        <ul className={styles.matching}>
          {matching.map((item: LawarItem, index: number) => (
            <li key={index}>
              <div className={styles.item}>
                <Anchor href={`/daerogi/matching/${item.documentId}`}>
                  <strong>{item.subject}</strong>
                  <span>
                    <strong>더 보기</strong>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path
                        d="M14 4.92969L12.5 6.42969L17.0703 11H3V13H17.0703L12.5 17.5703L14 19.0703L21.0703 12L14 4.92969Z"
                        fill="white"
                      />
                    </svg>
                  </span>
                </Anchor>
                {item.subject !== '일요일 (연맹 대전 없음)' && (
                  <dl>
                    {console.log('item.summary: ', item.summary)}
                    {console.log('item.matchingTime: ', item.matchingTime)}
                    {console.log('item.summary: ', item.summary)}
                    {console.log('item: ', item)}
                    {item.summary &&
                      item.matchingTime &&
                      item.summary.map((summaryItem: any, i: number) => (
                        <div key={i}>
                          {Object.entries(summaryItem).map(([key, value]: [string, any], idx: number) => (
                            <React.Fragment key={idx}>
                              <dt>
                                <strong>매칭 연맹 대전</strong>
                                <span>
                                  {key.split(',').map((splitKey: string, j: number) => (
                                    <em key={j}>{splitKey.trim()}</em>
                                  ))}
                                </span>
                              </dt>
                              <dd>
                                <strong>매칭 군비 경쟁</strong>
                                <span>{String(value)}</span>
                              </dd>
                              <dd>
                                <strong>매칭 시간</strong>
                                <span>{item.matchingTime[i] ? item.matchingTime[i] : '매칭 시간이 없습니다'}</span>
                              </dd>
                            </React.Fragment>
                          ))}
                        </div>
                      ))}
                  </dl>
                )}
              </div>
            </li>
          ))}
        </ul>
      )}
    </main>
  );
}
